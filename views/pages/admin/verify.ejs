<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link href="/css/verify.css" rel="stylesheet" />
    <link href="/css/output.css" rel="stylesheet" />
    <script src="/socket.io/socket.io.js"></script>

    <style>
        .img-help:hover {
            width: 100%;
        }

        .boxmain {
            margin-top: 50px;
        }

        .margmain {
            margin-top: 2%;
        }

        .helpbtn {
            width: 25%;
            border: 1px solid black;
            background-color: #0ea5e9;
            color: white;
            margin-bottom: 2%;
            margin-left: 2%;
            text-align: center;
            cursor: pointer;
        }

        .formhelp {
            max-width: 50%;
            display: none;
        }

        .con {
            padding-left: 13px;
        }

        .mainhelpcon {}
    </style>
</head>

<body onload="filldata()">
    <div class="relative h-screen" id="main" style="background-color: white">
        <div class="flex justify-center">
            <header class="py-4 h-auto">
                <!-- Side Navbar (left side) -->
                <%- include('../../partials/sidebar.ejs') %>
            </header>
            <main role="main">
                <div class="flex" style="width: 990px">
                    <div class="con">
                        <div style="max-width: 650px" class="margmain">
                            <div class="chat">
                                <div class="mainhelpcon">
                                    <div class="helpbtn" id="helpbtn1">User support</div>
                                    <div class="formhelp" id="formhelp">
                                        <div class="flex items-center justify-center p-6">
                                            <div class="mx-auto w-full max-w-[550px]">
                                                <div class="mb-5">
                                                    <label for="message"
                                                        class="mb-3 block text-base font-medium text-[#07074D]">
                                                        Describe Your Problem
                                                    </label>
                                                    <textarea rows="4" name="messagehelp" id="messagehelp"
                                                        placeholder="Type your message"
                                                        class="w-full resize-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"></textarea>
                                                </div>
                                                <div class="mb-5">
                                                    <label for=""
                                                        class="mb-3 block text-base font-medium text-[#07074D]">
                                                        Upload screenshot
                                                    </label>

                                                    <input type="file" id="screenshot" name="screenshot" />
                                                </div>

                                                <div>
                                                    <p class="helpbtn" id="supportform">submit</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div
                                    class="relative mt-10 overflow-x-auto overflow-y-auto shadow-md sm:rounded-lg tabal">
                                    <div class="relative shadow-md sm:rounded-lg">
                                        <table
                                            class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                                            <thead
                                                class="text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                                                <tr>
                                                    <th scope="col" class="px-16 py-3">Ticket Id</th>
                                                    <th scope="col" class="px-6 py-3">Image</th>

                                                    <th scope="col" class="px-6 py-3">Problem</th>
                                                    <th scope="col" class="px-6 py-3">
                                                        problem Status
                                                    </th>
                                                    <th scope="col" class="px-6 py-3">chat</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbody"></tbody>
                                        </table>
                                    </div>
                                </div>

                                <!-- component -->
                                <div id="chat-container" class="hidden fixed bottom-16 left-50 w-96">
                                    <div class="bg-white shadow-md rounded-lg max-w-lg w-full">
                                        <div
                                            class="p-4 border-b bg-blue-500 text-white rounded-t-lg flex justify-between items-center">
                                            <p id="help">help?</p>
                                            <button id="close-chat"
                                                class="text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400"
                                                onclick="toggleChatbox()">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none"
                                                    viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                        stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                                </svg>
                                            </button>
                                        </div>
                                        <div id="chatbox" class="p-4 h-80 overflow-y-auto">
                                            <!-- Chat messages will be displayed here -->
                                        </div>
                                        <div class="p-4 border-t flex">
                                            <input id="user-input" type="text" placeholder="Type a message"
                                                class="w-full px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                                            <p id="send-button"
                                                class="bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600 transition duration-300">
                                                Send
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- right sidebar -->
                    <%- include('../../partials/aside.ejs')%>
                </div>
            </main>
        </div>
    </div>

    <script>
        const chatbox = document.getElementById("chatbox");
        const chatContainer = document.getElementById("chat-container");
        const userInput = document.getElementById("user-input");
        const sendButton = document.getElementById("send-button");
        const openChatButton = document.getElementById("open-chat");
        const closeChatButton = document.getElementById("close-chat");

        let isChatboxOpen = false; // Set the initial state to open

        // Function to toggle the chatbox visibility
        function toggleChatbox() {
            if (isChatboxOpen == false) {
                chatContainer.style.display = "block";
                isChatboxOpen = true;
            } else {
                chatContainer.style.display = "none";
                isChatboxOpen = false;
            }
        }

        let supportform = document.getElementById("supportform");
        supportform.addEventListener("click", supportformhandel);

        async function supportformhandel() {
            let messagehelp = document.getElementById("messagehelp");
            let screenshot = document.getElementById("screenshot");
            let formdata = new FormData();
            formdata.append("content", messagehelp.value);
            formdata.append("media", screenshot.files[0]);
            console.log(formdata);
            let data = await fetch("/admin/supportform", {
                method: "POST",
                body: formdata,
            });

            data = await data.json();
            await filldata();
        }

        async function filldata() {
            let getsupportdata = await fetch("/admin/getsupport");
            getsupportdata = await getsupportdata.json();
            let dataget = getsupportdata.data;
            let getstring = ``;
            dataget.forEach(async (element) => {
                getstring += `
                <trclass="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                ${element.id}
                </td>
                <td class="p-4">
                <img src="${element.url}"class="w-16 md:w-32 max-w-full img-help max-h-full" alt="Apple Watch" />
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 max-w-[150px] break-words dark:text-white prob">
                ${element.content}
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                    ${element.status}
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white prob">
                <div>
                <p id="open-chat" class="${element.id} bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300 flex items-center"
                onclick="toggleChatbox()"> chat </p> </div> </td> </tr>

                `;
            });

            document.getElementById("tbody").innerHTML = getstring;
        }

        let helpbtn1 = document.getElementById("helpbtn1");
        helpbtn1.addEventListener("click", helpbtnhendeler);

        let check = true;
        form = document.getElementById("formhelp");

        function helpbtnhendeler() {
            if (check == true) {
                form.style.display = "block";
                check = false;
            } else {
                form.style.display = "none";
                check = true;
            }
        }

        let sendbutton = document.getElementById("send-button");

        let tbody = document.getElementById("tbody");

        tbody.addEventListener("click", tbodyhandel);

        async function tbodyhandel(e) {
            if (e.target.id == "open-chat") {
                async function chatload() {

                    let help = document.getElementById("help");
                    let tickitid = e.target.classList[0];
                    help.innerText = tickitid;
                    tickitid1 = tickitid

                    let data = await fetch("/admin/oldchats", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ tickitid: tickitid }),
                    });

                    data = await data.json();
                    data = data.data;
                    let chatbox = document.getElementById("chatbox");
                    chatbox.innerHTML = ``;

                    data.forEach((element) => {
                        if (element.sender_id == 11) {
                            chatbox.innerHTML += `   
                <div class="mb-2 text-right">
                            <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                    ${element.content}</p>
                                </div>
        `;
                        } else {
                            chatbox.innerHTML += `   <div class="mb-2">
                                       <p id="pagenumber"
                                        class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">
            
                                        ${element.content}</p>
                                     </div>
`;
                        }
                    });
                }
                await chatload();
            }
        }

        sendButton.addEventListener("click", sendhandel);
        let userInput1 = document.getElementById("user-input");


        async function sendhandel() {
            let tickitid = document.getElementById("help").innerText;


            let headerdata = await fetch("/admin/adminid")


            headerdata = await headerdata.json();


            let message = {
                content: userInput1.value,
                tickit_id: tickitid,
                sender_id: headerdata.sender_id,
                receiver_id: headerdata.reciving_id,
            };



            const socket = io();



            let data = await fetch("/admin/savechat", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ data: message }),
            });


            data = await data.json();

            if (data.result == true) {
                socket.emit("mesaage", message);

                let chatbox = document.getElementById("chatbox");


                chatbox.innerHTML += `   
                <div class="mb-2 text-right">
                            <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                    ${userInput1.value}</p>
                                </div>
        `;





            }

        }




        socket.on(`adminrecive`, (data) => {


            let help = document.getElementById("help")

            id = help.innerText

            if (id == data.tickit_id) {


                let chatbox = document.getElementById("chatbox");
                chatbox.scrollTop = chatbox.scrollHeight

                if (data.sender_id == 11) {
                    chatbox.innerHTML
                        +=
                        `
                            <div class="mb-2 text-right">
                            <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                                ${data.content}</p>
                            </div>
                                `
                }
                else {
                    chatbox.innerHTML += `   <div class="mb-2">
                    <p id="pagenumber"
                    class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">
            
                  ${data.content}</p>
                    </div>
`
                }
            }





        });



    </script>
</body>

</html>