<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/css/admin.css" rel="stylesheet" />
    <link href="/css/output.css" rel="stylesheet" />
    <script src="/js/user.admin.js"></script>
    <script src="/js/tweetadmin.js"></script>
    <script src="/js/hastag.admin.js"></script>
    <script src="/js/verify.admin.js"></script>

</head>

<body onload="usershandeler()">

    <div class="main-container" id="main-container">
        <%- include('../../partials/adminsidebar.ejs') %>
            <div class="content" id="content">
                <div class="chat">


                    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
                        <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                            <thead class="text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                                <tr>
                                    <th scope="col" class="px-16 py-3">
                                        Ticket Id
                                    </th>
                                    <th scope="col" class="px-6 py-3">
                                        Image
                                    </th>
                                    <th scope="col" class="px-6 py-3">
                                        username
                                    </th>
                                    <th scope="col" class="px-6 py-3">
                                        Problem
                                    </th>
                                    <th scope="col" class="px-6 py-3">
                                        problem Status
                                    </th>
                                    <th scope="col" class="px-6 py-3">
                                        chat
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr
                                    class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">

                                    <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                                        2563155sdfg
                                    </td>
                                    <td class="p-4">
                                        <img src="/uploads/1713355020529-Screenshot from 2024-04-05 18-06-44.png"
                                            class="w-16 md:w-32 max-w-full  img-help max-h-full" alt="Apple Watch">
                                    </td>
                                    <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                                        @mihirthakkar
                                    </td>
                                    <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white prob">
                                        i have issued when accesing my post sndfbgksbd hebskdjfb ebasdkfb
                                    </td>
                                    <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                                        <select name="problemstatus" id="problemstatus">
                                            <option value="volvo">in progress</option>
                                            <option value="saab">solved</option>
                                            <option value="mercedes">panding</option>

                                        </select>
                                    </td>
                                    <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white prob">
                                        <div>
                                            <button id="open-chat"
                                                class="bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300 flex items-center"
                                                onclick="toggleChatbox()">


                                                </svg>
                                                chat
                                            </button>
                                        </div>

                                    </td>


                                </tr>

                            </tbody>
                        </table>
                    </div>

                    <!-- component -->
                    <div id="chat-container" class="hidden fixed bottom-16 right-4 w-96">
                        <div class="bg-white shadow-md rounded-lg max-w-lg w-full">
                            <div
                                class="p-4 border-b bg-blue-500 text-white rounded-t-lg flex justify-between items-center">
                                <p class="text-lg font-semibold">Admin Bot</p>
                                <button id="close-chat"
                                    class="text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400"
                                    onclick="toggleChatbox()">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>
                            <div id="chatbox" class="p-4 h-80 overflow-y-auto">
                                <!-- Chat messages will be displayed here -->
                                <div class="mb-2 text-right">
                                    <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                                        hello</p>
                                </div>
                                <div class="mb-2">
                                    <p class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">
                                        This is a
                                        response from the chatbot.</p>
                                </div>


                            </div>
                            <div class="p-4 border-t flex">
                                <input id="user-input" type="text" placeholder="Type a message"
                                    class="w-full px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <button id="send-button"
                                    class="bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600 transition duration-300">Send</button>
                            </div>
                        </div>
                    </div>


                </div>
            </div>



</body>


<script>

    let users = document.getElementById("users");
    let tweets = document.getElementById("tweets");
    let hastags = document.getElementById("hastags");
    let verification = document.getElementById("verification");
    let support = document.getElementById("support");
    let adduser = document.getElementById("adduser");
    adduser.addEventListener("click", addusercontroler)
    users.addEventListener("click", usershandeler)
    tweets.addEventListener("click", tweetshandeler)
    hastags.addEventListener("click", hastagshandeler)
    verification.addEventListener("click", verifyhandeler)
    support.addEventListener("click", supporthandeler)


    async function addusercontroler() {

        document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        adduser.classList.add("active");
        let content = document.getElementById("content");


        let contentadd = `
        
        <div class="option">

<div class="heading">
    <p id="pagenumber">Add users</p>
    <hr>
</div>
<div class="fileimg" >
    <img src="/assets/file.png" alt="" class="imgfile" id="fileimg">
    <p>Add users using csv</p>

</div>
<div class="fileupload" id="fileupload">

    <input type="file" id="filecsv" name="filecsv">

    <p id="brt"
        class="px-6 py-2 mt-4 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-300 btnsub transform bg-black rounded-lg hover:bg-gray-900 focus:outline-none focus:ring focus:ring-gray-300 focus:ring-opacity-50"
        value="submit">
        submit
    </p>
</div>
<div class="fileimg" >
    <img src="/assets/form.png" alt="" class="imgfile" id="formimg1">
    <p>Add user using form</p>
</div>
<div id="formuser">
    <input
        class="block w-full px-4 py-2 mt-2 text-gray-800 placeholder-gray-500 bg-white border rounded-lg dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 focus:border-black dark:focus:border-black focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-gray-300"
        type="text" placeholder="Name" id="name" aria-label="Name" name="name" />

    <input
        class="block w-full px-4 py-2 mt-2 text-gray-800 placeholder-gray-500 bg-white border rounded-lg dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 focus:border-black dark:focus:border-black focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-gray-300"
        type="text" placeholder="Username" id="username" aria-addlabel="Username" name="username" />
    <input
        class="block w-full px-4 py-2 mt-2 text-gray-800 placeholder-gray-500 bg-white border rounded-lg dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 focus:border-black dark:focus:border-black focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-gray-300"
        type="text" placeholder="Email Address" id="email" aria-label="Email Address" name="email" />
    <input
        class="block w-full px-4 py-2 mt-2 text-gray-800 placeholder-gray-500 bg-white border rounded-lg focus:border-black dark:focus:border-black focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-white"
        placeholder="Date Of Birth" class="textbox-n" type="text" onfocus="(this.type='date')"
        onblur="(this.type='text')" id="dob" aria-label="date" name="dob" /> 
    <input
        class="block w-full px-4 py-2 mt-2 text-gray-800 placeholder-gray-500 bg-white border rounded-lg dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 focus:border-black dark:focus:border-black focus:ring-opacity-40 focus:outline-none focus:ring focus:ring-gray-300"
        type="password" id="password" name="password" placeholder="Password" aria-label="password" required />
    <p id="confirm"
        class="px-6 py-2 text-sm mt-4 btnsub font-medium tracking-wide text-white capitalize transition-colors duration-300 transform bg-black rounded-lg hover:bg-gray-900 focus:outline-none focus:ring focus:ring-gray-300 focus:ring-opacity-50"
        value="create">
        create
    </p>


</div>

</div>`

        content.innerHTML = contentadd;


        let confirm = document.getElementById("confirm")
        confirm.addEventListener("click", formdatahandel)

        async function formdatahandel() {
            let name = document.getElementById("name");
            let username = document.getElementById("username");
            let email = document.getElementById("email");
            let dob = document.getElementById("dob");
            let password = document.getElementById("password");
            let formdata = new FormData();
            formdata.append("name", name.value)
            formdata.append("username", username.value)
            formdata.append("email", email.value)
            formdata.append("date_of_birth", dob.value)
            formdata.append("password", password.value)
            console.log(formdata);

            let data = await fetch("/admin/adduser", {
                method: "POST",
                headers: {
                    "Content-type": "application/x-www-form-urlencoded"
                },
                body: new URLSearchParams(formdata)
            })
        }

        let brt = document.getElementById("brt")
        brt.addEventListener("click", filehandel)
        async function filehandel() {
            let name = document.getElementById("name");
            let filecsv = document.getElementById("filecsv");

            alert("hello ")
            let formdata = new FormData();
            formdata.append("name", name.value)
            formdata.append("file", filecsv.files[0])

            let data = await fetch("/admin/uploadcsv", {
                method: "POST",
                body: formdata
            })
        }

    }

    async function usershandeler(search = "", curpage = 1) {

        // document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        // users.classList.add("active");
        // let content = document.getElementById("content");


        // let userscontent = await getuserpage(search, curpage);
        // content.innerHTML = userscontent;



    }

    async function tweetshandeler(search = "", curpage = 1) {
        document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        tweets.classList.add("active");

        let tweetcontent = await gettweets(search, curpage);
        content.innerHTML = tweetcontent;
    }

    async function hastagshandeler(search = "") {
        document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        hastags.classList.add("active");

        let hashcontain = await gethastag(search);
        content.innerHTML = hashcontain;

    }

    async function verifyhandeler(search = "", curpage = 1) {
        document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        verification.classList.add("active");

        let verification1 = await verify_request(search, curpage);
        content.innerHTML = verification1

    }

    function supporthandeler() {
        document.querySelectorAll(".active").forEach(el => el.classList.remove("active"));
        support.classList.add("active");
    }

    function hastagverification() {

    }

    async function verifyhandel(userid, req1, reqid) {
        await vrified(userid, req1, reqid)
        let verification1 = await verify_request(search = "", curpage = 1);
        content.innerHTML = verification1
    }

    async function tweetristric(tweetid, isristricted) {
        await ristric(tweetid, isristricted);
    }

    async function userstatushandel(id, active) {
        await statushandeluser(id, active);
    }

    let main = document.getElementById("content");

    main.addEventListener("click", mainhandel)

    async function mainhandel(e) {

        console.log(e.target.id);
        let tableSearchUsers = document.getElementById("table-search-users");
        if (e.target.src == window.location.origin + "/assets/red.png") {
            e.target.src = "/assets/green.png"
        }
        else if (e.target.src == window.location.origin + "/assets/green.png") {
            e.target.src = "/assets/red.png"

        }
        let pagenumber = document.getElementById("pagenumber").innerText
        if (e.target.classList[0] == "gtuser") {

            await usershandeler(tableSearchUsers.value, Number(pagenumber) + 1)

        }
        else if (e.target.classList[0] == "ltuser") {
            await usershandeler(tableSearchUsers.value, Number(pagenumber) - 1)
        }


        if (e.target.classList[0] == "gttweet") {

            await tweetshandeler(tableSearchUsers.value, Number(pagenumber) + 1)

        }
        else if (e.target.classList[0] == "lttweet") {
            await tweetshandeler(tableSearchUsers.value, Number(pagenumber) - 1)
        }


        if (e.target.classList[0] == "gtverify") {

            await verifyhandeler(tableSearchUsers.value, Number(pagenumber) + 1)

        }
        else if (e.target.classList[0] == "ltverify") {
            await verifyhandeler(tableSearchUsers.value, Number(pagenumber) - 1)
        }

        if (e.target.id == "fileimg") {
            let formuser = document.getElementById("formuser")
            let fileupload = document.getElementById("fileupload")
            fileupload.style.display = "block"
            formuser.style.display = "none"

        } else if (e.target.id == "formimg1") {

            let formuser = document.getElementById("formuser")
            let fileupload = document.getElementById("fileupload")
            fileupload.style.display = "none"
            formuser.style.display = "block"
        }

        console.log(e.target.id);

        if (e.target.id == "table-search-users") {
            let tableSearchUsers = document.getElementById("table-search-users");

            tableSearchUsers.addEventListener("keydown", searchhandel)
            let debouncing;

            function searchhandel(e) {

                clearTimeout(debouncing)
                debouncing = setTimeout(async () => {
                    let search1 = tableSearchUsers.value;

                    console.log(e.target.classList[0]);

                    if (e.target.classList[0] == "user") {

                        let pagenumber = document.getElementById("pagenumber").innerText;
                        console.log("page number is ", pagenumber);
                        console.log(e.target.classList[0]);
                        alert("users")
                        await usershandeler(search1, pagenumber)
                    }
                    else if (e.target.classList[0] == "hashtag") {
                        await hastagshandeler(search1)
                    }
                    else if (e.target.classList[0] == "tweet") {
                        tableSearchUsers.focus()
                        await tweetshandeler(search1)
                    }
                    else if (e.target.classList[0] == "verify") {
                        let pagenumber = document.getElementById("pagenumber").innerText;
                        console.log("page number is ", pagenumber);
                        await verifyhandeler(search1, pagenumber)
                    }




                }, 800)

            }
        }

    }

    const chatbox = document.getElementById("chatbox");
    const chatContainer = document.getElementById("chat-container");
    const userInput = document.getElementById("user-input");
    const sendButton = document.getElementById("send-button");
    const openChatButton = document.getElementById("open-chat");
    const closeChatButton = document.getElementById("close-chat");

    let isChatboxOpen = false; // Set the initial state to open

    // Function to toggle the chatbox visibility
    function toggleChatbox() {
        if (isChatboxOpen == false) {
            chatContainer.style.display = "block"
            isChatboxOpen = true
        }
        else {
            chatContainer.style.display = "none"
            isChatboxOpen = false
        }
    }


</script>

</html>