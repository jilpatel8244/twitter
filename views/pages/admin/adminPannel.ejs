<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/css/admin.css" rel="stylesheet" />
    <link href="/css/output.css" rel="stylesheet" />
    <script src="/js/user.admin.js"></script>
    <script src="/js/tweetadmin.js"></script>
    <script src="/js/mainhandel.js"></script>
    <script src="/js/adminFeatureHandeler.js"></script>
    <script src="/js/hastag.admin.js"></script>
    <script src="/js/verify.admin.js"></script>
    <script src="/js/adduser.js"></script>
    <script src="/socket.io/socket.io.js"></script>

</head>

<body onload="usershandeler()">

    <div class="main-container" id="main-container">
        <%- include('../../partials/adminsidebar.ejs') %>
            <div class="content overflow-auto" id="content">
            </div>
            <div class="content overflow-auto" id="content1">
                <div class="chat">


                    <div class="relative overflow-x-auto overflow-y-auto shadow-md sm:rounded-lg tabal">
                        <div
                            class="flex items-center justify-between flex-column flex-wrap md:flex-row space-y-4 md:space-y-0 pb-4 bg-white dark:bg-gray-900">

                        </div>
                        <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                            <thead
                                class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                                <tr>
                                    <th scope="col" class="px-16 py-3">Ticket Id</th>
                                    <th scope="col" class="px-6 py-3">Image</th>

                                    <th scope="col" class="px-6 py-3">Problem</th>
                                    <th scope="col" class="px-6 py-3">
                                        username
                                    </th>
                                    <th scope="col" class="px-6 py-3">chat</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">

                            </tbody>
                        </table>
                    </div>

                    <!-- component -->
                    <div id="chat-container" class="hidden fixed bottom-16 right-4 w-96">
                        <div class="bg-white shadow-md rounded-lg max-w-lg w-full">
                            <div
                                class="p-4 border-b bg-blue-500 text-white rounded-t-lg flex justify-between items-center">
                                <p class="text-lg font-semibold" id="help">help</p>
                                <button id="close-chat"
                                    class="text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400"
                                    onclick="toggleChatbox()">
                                    <svg id="pagenumber" xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>
                            <div id="chatbox" class="p-4 h-80 overflow-y-auto">
                                <!-- Chat messages will be displayed here -->



                            </div>
                            <div class="p-4 border-t flex">
                                <input id="user-input" type="text" placeholder="Type a message"
                                    class="w-full px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <button id="send-button"
                                    class="bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600 transition duration-300">Send</button>
                            </div>
                        </div>
                    </div>


                </div>

            </div>

</body>


<script>

    let users = document.getElementById("users");
    let tweets = document.getElementById("tweets");
    let hastags = document.getElementById("hastags");

    let verification = document.getElementById("verification");
    let support = document.getElementById("support");
    let adduser = document.getElementById("adduser");
    adduser.addEventListener("click", addusercontroler)
    users.addEventListener("click", usershandeler)
    tweets.addEventListener("click", tweetshandeler)
    hastags.addEventListener("click", hastagshandeler)
    verification.addEventListener("click", verifyhandeler)
    support.addEventListener("click", supporthandeler)



    function hastagverification() {

    }

    async function verifyhandel(userid, req1, reqid) {
        await vrified(userid, req1, reqid)
        let verification1 = await verify_request(search = "", curpage = 1);
        content.innerHTML = verification1
    }

    async function tweetristric(tweetid, isristricted) {
        await ristric(tweetid, isristricted);
    }

    async function userstatushandel(id, active) {
        await statushandeluser(id, active);
    }

    let main = document.getElementById("content");
    let main1 = document.getElementById("content1");


    main.addEventListener("click", mainhandel)
    main1.addEventListener("click", mainhandel)


    const chatbox = document.getElementById("chatbox");
    const chatContainer = document.getElementById("chat-container");
    const userInput = document.getElementById("user-input");
    const sendButton = document.getElementById("send-button");
    const openChatButton = document.getElementById("open-chat");
    const closeChatButton = document.getElementById("close-chat");

    let isChatboxOpen = false; // Set the initial state to open

    // Function to toggle the chatbox visibility
    function toggleChatbox() {
        if (isChatboxOpen == false) {
            chatContainer.style.display = "block"
            isChatboxOpen = true
        }
        else {
            chatContainer.style.display = "none"
            isChatboxOpen = false
        }
    }


    async function filldata() {
        let getsupportdata = await fetch("/admin/adminsupport");
        getsupportdata = await getsupportdata.json();
        let dataget = getsupportdata.data;
        let getstring = ``;
        dataget.forEach(async (element) => {
            getstring += `
                <trclass="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                ${element.id}
                </td>
                <td class="p-4">
                <img src="${element.url}"class="w-16 md:w-32 max-w-full img-help max-h-full" alt="Apple Watch" />
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 max-w-[150px] break-words dark:text-white prob">
                ${element.content}
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                    @${element.username}
                </td>
                <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white prob">
                <div>
                <p id="chatbtntab" class="${element.id} bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300 flex items-center"
                onclick="toggleChatbox()"> chat </button> </div> </td> </tr>

                `;
        });

        document.getElementById("tbody").innerHTML = getstring;
    }



    const socket = io();

    let help = document.getElementById("help")




    socket.on(`recivemsg`, (data) => {

        let help = document.getElementById("help")

        id = help.innerText

        if (id == data.tickit_id) {

            let chatbox = document.getElementById("chatbox");

            if (data.sender_id == 17) {
                chatbox.innerHTML
                    +=
                    `
                   <div class="mb-2 text-right">
                   <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                       ${data.content}</p>
                       </div>
                           `
                chatbox.scrollTop = chatbox.scrollHeight
            }
            else {
                chatbox.innerHTML += `   <div class="mb-2">
                               <p id="pagenumber"
                                   class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">
                               
                               ${data.content}</p>
                           </div>
                   `
                chatbox.scrollTop = chatbox.scrollHeight
            }

        }



    });



    let sendbutton = document.getElementById("send-button")
    let userInput1 = document.getElementById("user-input")

    sendbutton.addEventListener("click", sendhandel)



    async function sendhandel() {
        let tickitid = document.getElementById("help").innerText;

        let headerdata = await fetch("/admin/useridTickit", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ tickitid: tickitid }),
        });


        headerdata = await headerdata.json();


        let message = {
            content: userInput1.value,
            tickit_id: tickitid,
            sender_id: headerdata.sender_id,
            receiver_id: headerdata.reciving_id,
        };


        console.log("mesasage is ", message);
        const socket = io();
        let data = await fetch("/admin/savechat", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ data: message }),
        });


        data = await data.json();
        console.log(data);
        if (data.result == true) {
            socket.emit("adminmesaage", message);

            let chatbox = document.getElementById("chatbox");

            chatbox.innerHTML += `   
                <div class="mb-2 text-right">
                            <p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">
                    ${userInput1.value}</p>
                                </div>
        `;

        }

    }




</script>

</html>